variables:
  DOCKER_IMAGE_NAME_IG: $CI_REGISTRY_IMAGE/ig

build-ig:
  extends: .docker-login
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_MESSAGE =~ /EXP-IG .*/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ig/**/*
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - cd $CI_PROJECT_DIR/ig
    - docker pull $DOCKER_IMAGE_NAME_IG:latest || true
    - docker build --build-arg CI_REGISTRY=$CI_REGISTRY_IMAGE --cache-from
      $DOCKER_IMAGE_NAME_IG:latest -t $DOCKER_IMAGE_NAME_IG:$CI_COMMIT_SHA -f Dockerfile .
    - docker push $DOCKER_IMAGE_NAME_IG:$CI_COMMIT_SHA

pytest-ig:
  image: $DOCKER_IMAGE_NAME_IG:$CI_COMMIT_SHA
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ig/**/*
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - cd $CI_PROJECT_DIR/ig
    - export stage=test
    - unzip  tests/fixtures/model-fixtures.zip -d tests/models
    - cp -r tests/models/model-fixtures/* tests/models/
    - rm -r tests/models/model-fixtures/
    - rm tests/fixtures/model-fixtures.zip
    - pytest --cov=ig --cov-report=term-missing --junit-xml=test-results.xml --doctest-modules -vv
    - coverage html --directory=coverage_html_report
    - coverage report
  coverage: '/TOTAL.+ (\d+\.?\d+)%/'
  artifacts:
    name: "Test Results"
    when: always
    paths:
      - ./ig/test-results.xml
      - ./ig/coverage_html_report
    reports:
      junit: ./ig/test-results.xml
    expire_in: 1 day

push-latest-ig:
  extends: .docker-login
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - ig/**/*
  script:
    - docker pull $DOCKER_IMAGE_NAME_IG:$CI_COMMIT_SHA
    - docker tag $DOCKER_IMAGE_NAME_IG:$CI_COMMIT_SHA $DOCKER_IMAGE_NAME_IG:latest
    - docker push $DOCKER_IMAGE_NAME_IG:latest
