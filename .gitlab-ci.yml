stages:
  - build
  - lint
  - test
  - publish
  - deploy

variables:
  PRE_COMMIT_VERSION: "2.17.0"
  PROJECT_NAME: biondeep_ig
  DOCKER_IMAGE_IG: $CI_REGISTRY_IMAGE/biondeep-ig
  DOCKER_IMAGE_LINT: $CI_REGISTRY_IMAGE/lint:$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_DOCS: $CI_REGISTRY_IMAGE/docs:$CI_COMMIT_SHORT_SHA

.docker-login:
  image: eu.gcr.io/int-infra-harborbackup-gcp/docker-hub/docker:19.03
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
      "$CI_REGISTRY"

build_image:
  extends: .docker-login
  stage: build
  script:
    - docker pull $DOCKER_IMAGE_IG:latest || true
    - docker build --build-arg CI_REGISTRY=$CI_REGISTRY_IMAGE --cache-from $DOCKER_IMAGE_IG:latest
      -t $DOCKER_IMAGE_IG:$CI_COMMIT_SHORT_SHA -f Dockerfile .
    - docker push $DOCKER_IMAGE_IG:$CI_COMMIT_SHORT_SHA

build-lint:
  extends: .docker-login
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker build -t $DOCKER_IMAGE_LINT . -f Dockerfile.lint
    - docker push $DOCKER_IMAGE_LINT

lint:
  image: $DOCKER_IMAGE_LINT
  stage: lint
  needs: [build-lint]
  script:
    - pre-commit run --all-files

test:
  image: $DOCKER_IMAGE_IG:$CI_COMMIT_SHORT_SHA
  needs: ["build_image"]
  stage: test
  script:
    - apt-get install zip unzip
    - export stage=test
    - unzip  tests/fixtures/model-fixtures.zip -d tests/models
    - cp -r tests/models/model-fixtures/* tests/models/
    - rm -r tests/models/model-fixtures/
    - rm tests/fixtures/model-fixtures.zip
    - pytest --cov=ig --cov-report=term-missing --junit-xml=test-results.xml --doctest-modules -vv
    - coverage html --directory=coverage_html_report
    - coverage report
  coverage: '/TOTAL.+ (\d+\.?\d+)%/'
  artifacts:
    name: "Test Results"
    when: always
    paths:
      - .test-results.xml
      - .coverage_html_report
    reports:
      junit: .test-results.xml
    expire_in: 1 day

build-docs:
  extends: .docker-login
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker build -t $DOCKER_IMAGE_DOCS . -f Dockerfile.docs
    - docker push $DOCKER_IMAGE_DOCS

test_docs:
  image: $DOCKER_IMAGE_DOCS
  stage: test
  needs: ["build-docs"]
  script:
    - mkdocs build --verbose --site-dir docs_public
  artifacts:
    paths:
      - docs_public

pages:
  image: $DOCKER_IMAGE_DOCS
  stage: publish
  needs: ["build-docs"]
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - mkdocs build --verbose
  artifacts:
    paths:
      - public

push-latest-ig:
  extends: .docker-login
  stage: deploy
  needs:
    - job: build_image

  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - docker pull $DOCKER_IMAGE_IG:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_IMAGE_IG:$CI_COMMIT_SHORT_SHA  $DOCKER_IMAGE_IG:latest
    - docker push $DOCKER_IMAGE_IG:latest
